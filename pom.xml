<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.dili</groupId>
    <version>1.5.2-SNAPSHOT</version>
    <artifactId>sharp-sword</artifactId>
    <description>利刃</description>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>
            UTF-8
        </project.build.sourceEncoding>
        <jdk.version>1.8</jdk.version>
        <springloaded.version>1.2.6.RELEASE</springloaded.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mapper.version>3.3.9</mapper.version>
        <mysql.version>5.1.40</mysql.version>
        <aspectj.version>1.8.10</aspectj.version>
        <projectdir>${basedir}</projectdir>
    </properties>


    <build>
        <!-- 资源文件过滤 -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <!-- 编译JDK版本 -->
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 支持默认maven分隔符${} -->
            <!--<plugin>-->
            <!--<artifactId>maven-resources-plugin</artifactId>-->
            <!--<configuration>-->
            <!--<useDefaultDelimiters>true</useDefaultDelimiters>-->
            <!--<encoding>UTF-8</encoding>-->
            <!--</configuration>-->
            <!--</plugin>-->

            <!--<plugin>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<goals>-->
                            <!--<goal>repackage</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!--<plugin>-->
                <!--<groupId>org.mybatis.generator</groupId>-->
                <!--<artifactId>mybatis-generator-maven-plugin</artifactId>-->
                <!--<version>1.3.2</version>-->
                <!--<configuration>-->
                    <!--<configurationFile>src/main/resources/generator/generatorConfig1.xml</configurationFile>-->
                    <!--<overwrite>true</overwrite>-->
                    <!--<verbose>true</verbose>-->
                <!--</configuration>-->
                <!--<dependencies>-->
                    <!--<dependency>-->
                        <!--<groupId>mysql</groupId>-->
                        <!--<artifactId>mysql-connector-java</artifactId>-->
                        <!--<version>${mysql.version}</version>-->
                    <!--</dependency>-->
                    <!--<dependency>-->
                        <!--<groupId>tk.mybatis</groupId>-->
                        <!--<artifactId>mapper</artifactId>-->
                        <!--<version>${mapper.version}</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->
            <!--</plugin>-->

            <!--<plugin>-->
                <!--<groupId>com.github.wvengen</groupId>-->
                <!--<artifactId>proguard-maven-plugin</artifactId>-->
                <!--<version>2.0.14</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>proguard</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--<attach>true</attach>-->
                    <!--&lt;!&ndash; 使用5.3.2版本来混淆 &ndash;&gt;-->
                    <!--<proguardVersion>5.3.2</proguardVersion>-->
                    <!--<obfuscate>true</obfuscate>-->
                    <!--<attachArtifactClassifier>pg</attachArtifactClassifier>-->
                    <!--<proguardInclude>${basedir}/proguard.conf</proguardInclude>-->
                    <!--<addMavenDescriptor>false</addMavenDescriptor>-->
                    <!--&lt;!&ndash; attach 的作用是在 install 与 deploy 时将生成的 pg 文件也安装与部署 &ndash;&gt;-->
                    <!--<options> &lt;!&ndash; 详细配置方式参考 ProGuard 官方文档 &ndash;&gt;-->
                        <!--&lt;!&ndash;<option>-dontobfuscate</option>&ndash;&gt;-->
                        <!--&lt;!&ndash;<option>-ignorewarnings</option> &lt;!&ndash;忽略所有告警&ndash;&gt;&ndash;&gt;-->
                        <!--&lt;!&ndash;<option>-dontshrink</option>   &lt;!&ndash;不做 shrink &ndash;&gt;&ndash;&gt;-->
                        <!--&lt;!&ndash;<option>-dontoptimize</option> &lt;!&ndash;不做 optimize &ndash;&gt;&ndash;&gt;-->
                        <!--<option>-dontskipnonpubliclibraryclasses</option>&lt;!&ndash; 指定不去忽略非公共库的类 &ndash;&gt;-->
                        <!--<option>-dontskipnonpubliclibraryclassmembers</option>&lt;!&ndash; 指定不去忽略非公共库的类 &ndash;&gt;-->
                        <!--<option>-dontusemixedcaseclassnames</option> &lt;!&ndash;混合时不使用大小写混合，混合后的类名为小写&ndash;&gt;-->
                        <!--&lt;!&ndash;<option>-optimizationpasses 5</option> &lt;!&ndash;代码混淆压缩比，在0~7之间，默认为5，一般不做修改&ndash;&gt;&ndash;&gt;-->
                        <!--<option>-verbose</option>&lt;!&ndash;这句话能够使我们的项目混淆后产生映射文件,包含有类名->混淆后类名的映射关系&ndash;&gt;-->
                        <!--&lt;!&ndash;<option>-repackageclasses org.noahx.proguard.example.project2.pg</option>&ndash;&gt;-->
                        <!--&lt;!&ndash;平行包结构（重构包层次），所有混淆的类放在 pg 包下&ndash;&gt;-->

                        <!--&lt;!&ndash; 以下为 Keep，哪些内容保持不变，因为有一些内容混淆后（a,b,c）导致反射或按类名字符串相关的操作失效 &ndash;&gt;-->

                        <!--<option>-keep class **.package-info</option>-->
                        <!--&lt;!&ndash;保持包注解类&ndash;&gt;-->

                        <!--&lt;!&ndash;JAXB NEED，具体原因不明，不加会导致 JAXB 出异常，如果不使用 JAXB 根据需要修改&ndash;&gt;-->
                        <!--&lt;!&ndash; Jaxb requires generics to be available to perform xml parsing and without this option ProGuard was not retaining that information after obfuscation. That was causing the exception above. &ndash;&gt;-->

                        <!--<option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod</option>-->
                        <!--&lt;!&ndash;保持源码名与行号（异常时有明确的栈信息），注解（默认会过滤掉所有注解，会影响框架的注解）&ndash;&gt;-->

                        <!--<option>-keepclassmembers enum com.dili.ss.** { *;}</option>-->
                        <!--&lt;!&ndash;资源类变量需要保留&ndash;&gt;-->

                        <!--<option>-keepdirectories</option>-->
                        <!--<option>-keep class com.dili.ss.domain.** { *;}</option>-->
                        <!--<option>-keep class com.dili.ss.constant.** { *;}</option>-->
                        <!--<option>-keep class com.dili.ss.base.** { *;}</option>-->
                        <!--<option>-keep class com.dili.ss.beetl.** { *;}</option>-->
                        <!--<option>-keep class com.dili.ss.boot.** { *;}</option>-->
                        <!--<option>-keep class com.dili.ss.mbg.** { *;}</option>-->
                        <!--<option>-keep class com.dili.ss.quartz.** { *;}</option>-->
                        <!--&lt;!&ndash;<option>-keep class com.dili.ssring.** { *;} </option>&ndash;&gt;-->
                        <!--&lt;!&ndash; 排除所有注解类 &ndash;&gt;-->
                        <!--<option>-keep class * extends java.lang.annotation.Annotation { *; }</option>-->
                        <!--<option>-keep interface * extends java.lang.annotation.Annotation { *; }</option>-->

                        <!--&lt;!&ndash;保持 Bean 类，（由于很多框架会对 Bean 中的内容做反射处理，请根据自己的业务调整） &ndash;&gt;-->

                        <!--&lt;!&ndash;<option>-keep class com.dili.ssanConver { public void init(); public void&ndash;&gt;-->
                            <!--&lt;!&ndash;destroy(); }&ndash;&gt;-->
                        <!--&lt;!&ndash;</option>&ndash;&gt;-->
                        <!--<option>-keep class com.dili.ss.util.BeanConver { *; }</option>-->
                        <!--<option>-keep class com.dili.ss.util.MoneyUtils { *; }</option>-->
                        <!--<option>-keep class com.dili.ss.util.RedisUtil { *; }</option>-->
                        <!--<option>-keep class com.dili.ss.util.ReflectionUtils { *; }</option>-->
                        <!--<option>-keep class com.dili.ss.util.SpringUtil { *; }</option>-->
                        <!--<option>-keep class com.dili.http.okhttp.OkHttpUtils { *; }</option>-->
                        <!--<option>-keep class com.dili.ss.ip.SM { *;}</option>-->

                        <!--&lt;!&ndash; okhttp util &ndash;&gt;-->
                        <!--<option>-dontwarn okio.**</option>-->
                        <!--&lt;!&ndash; 保持对外的接口性质类对外的类名与方法名不变 &ndash;&gt;-->

                    <!--</options>-->
                    <!--<injar>${project.build.finalName}.jar</injar>-->
                    <!--<outjar>${project.build.finalName}-pg.jar</outjar>-->
                    <!--<libs>-->
                        <!--<lib>${java.home}/lib/rt.jar</lib>-->
                    <!--</libs>-->

                <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/net.sf.proguard/proguard-base -->
        <!--<dependency>-->
            <!--<groupId>net.sf.proguard</groupId>-->
            <!--<artifactId>proguard-base</artifactId>-->
            <!--<version>5.3.2</version>-->
        <!--</dependency>-->
        <!-- https://mvnrepository.com/artifact/com.github.wvengen/proguard-maven-plugin -->
        <!--<dependency>-->
            <!--<groupId>com.github.wvengen</groupId>-->
            <!--<artifactId>proguard-maven-plugin</artifactId>-->
            <!--<version>2.0.14</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.3.5</version>
        </dependency>
        <!--poi-->
        <!--<dependency>-->
            <!--<groupId>org.apache.poi</groupId>-->
            <!--<artifactId>poi</artifactId>-->
            <!--<version>3.15</version>-->
        <!--</dependency>-->
        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.15</version>
        </dependency>



        <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.3</version>
        </dependency>

        <!-- 参数校验包 -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.2.4.Final</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml</groupId>
                    <artifactId>classmate</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.mariadb.jdbc</groupId>-->
            <!--<artifactId>mariadb-java-client</artifactId>-->
            <!--<version>1.1.7</version>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.0.27</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.9.0</version>
            <scope>provided</scope>
        </dependency>
        <!-- if you enable json support in spring mvc. -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.13</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-commons</artifactId>
            <version>5.1</version>
            <scope>provided</scope>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.beetl</groupId>-->
            <!--<artifactId>beetl-core</artifactId>-->
            <!--<version>2.2.5</version>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->
        <dependency>
            <groupId>com.ibeetl</groupId>
            <artifactId>beetl</artifactId>
            <version>2.7.12</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        <!--swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.4.0</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.4.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>1.5.3</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.23</version>
        </dependency>
        <!-- okhttp -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>3.7.0</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>com.squareup.okio</groupId>
            <artifactId>okio</artifactId>
            <version>1.12.0</version>
            <!--<scope>provided</scope>-->
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.3</version>
            <scope>provided</scope>
        </dependency>

        <!--quartz-->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>23.0</version>
        </dependency>

        <!--  ============================== spring boot starter ==============================  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--mybatis-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.1.1</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <!--pagehelper-->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>1.1.1</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <!--mbg-->
        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper-spring-boot-starter</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-redis</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-data-redis</artifactId>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-actuator</artifactId>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--<scope>provided</scope>-->
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-tomcat</artifactId>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>1.12</version>
        </dependency>

        <dependency>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt-spring31</artifactId>
            <version>1.9.2</version>
            <!--<scope>provided</scope>-->
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-email</artifactId>
            <version>1.4</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework/springloaded -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>springloaded</artifactId>
            <version>${springloaded.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>RELEASE</version>
            <scope>provided</scope>
        </dependency>
        <!-- ===========================================spring cloud=========================================== -->
        <!-- eureka-server -->
        <!--<dependency>-->
            <!--<groupId>org.springframework.cloud</groupId>-->
            <!--<artifactId>spring-cloud-starter-eureka-server</artifactId>-->
        <!--</dependency>-->
        <!-- https://mvnrepository.com/artifact/org.jetbrains/annotations -->

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>1.4.3.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Boot 1.3.x and Spring Framework 4.2.x support -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <!--<version>Brixton.RELEASE</version>-->
                <version>Camden.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!-- 本机-->
    <!--<distributionManagement>-->
        <!--<repository>-->
            <!--<id>maven-releases</id>-->
            <!--<name>Nexus Release Repository</name>-->
            <!--<url>-->
                <!--http://localhost:8081/repository/maven-releases/-->
            <!--</url>-->
        <!--</repository>-->
        <!--<snapshotRepository>-->
            <!--<id>maven-snapshots</id>-->
            <!--<name>Nexus Snapshot Repository</name>-->
            <!--<url>-->
                <!--http://localhost:8081/repository/maven-snapshots/-->
            <!--</url>-->
        <!--</snapshotRepository>-->
    <!--</distributionManagement>-->
    <!--地利-->
    <distributionManagement>
        <repository>
            <id>central</id>
            <name>Artifactory Release Repository</name>
            <url>
                http://mvn2.diligrp.com/artifactory/libs-release-local
            </url>
        </repository>
        <snapshotRepository>
            <id>central</id>
            <name>Artifactory Snapshot Repository</name>
            <url>
                http://mvn2.diligrp.com/artifactory/libs-snapshot-local
            </url>
        </snapshotRepository>
    </distributionManagement>

</project>